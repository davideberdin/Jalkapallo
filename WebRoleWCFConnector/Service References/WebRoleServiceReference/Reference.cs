//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace WebRoleWCFConnector.WebRoleServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WebRoleServiceReference.IWebRoleService")]
    public interface IWebRoleService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWebRoleService/Registration", ReplyAction="http://tempuri.org/IWebRoleService/RegistrationResponse")]
        System.IAsyncResult BeginRegistration(string username, string password, string email, string teamName, System.AsyncCallback callback, object asyncState);
        
        int EndRegistration(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWebRoleService/LoginUser", ReplyAction="http://tempuri.org/IWebRoleService/LoginUserResponse")]
        System.IAsyncResult BeginLoginUser(string userName, string password, System.AsyncCallback callback, object asyncState);
        
        string EndLoginUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWebRoleService/SaveCurrentTeam", ReplyAction="http://tempuri.org/IWebRoleService/SaveCurrentTeamResponse")]
        System.IAsyncResult BeginSaveCurrentTeam(System.Collections.ObjectModel.ObservableCollection<Jalkapallo_Shared.Player> currentFormation, string teamName, System.AsyncCallback callback, object asyncState);
        
        void EndSaveCurrentTeam(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWebRoleService/GetTeam", ReplyAction="http://tempuri.org/IWebRoleService/GetTeamResponse")]
        System.IAsyncResult BeginGetTeam(string teamName, System.AsyncCallback callback, object asyncState);
        
        string EndGetTeam(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWebRoleService/GetSavedTeam", ReplyAction="http://tempuri.org/IWebRoleService/GetSavedTeamResponse")]
        System.IAsyncResult BeginGetSavedTeam(string teamName, System.AsyncCallback callback, object asyncState);
        
        string EndGetSavedTeam(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWebRoleService/GetPlayersOnSellDirect", ReplyAction="http://tempuri.org/IWebRoleService/GetPlayersOnSellDirectResponse")]
        System.IAsyncResult BeginGetPlayersOnSellDirect(System.AsyncCallback callback, object asyncState);
        
        string EndGetPlayersOnSellDirect(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWebRoleService/GetPlayersOnSellAuctionHouse", ReplyAction="http://tempuri.org/IWebRoleService/GetPlayersOnSellAuctionHouseResponse")]
        System.IAsyncResult BeginGetPlayersOnSellAuctionHouse(System.AsyncCallback callback, object asyncState);
        
        string EndGetPlayersOnSellAuctionHouse(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWebRoleService/GetAllTeamsAndPlayers", ReplyAction="http://tempuri.org/IWebRoleService/GetAllTeamsAndPlayersResponse")]
        System.IAsyncResult BeginGetAllTeamsAndPlayers(System.AsyncCallback callback, object asyncState);
        
        string EndGetAllTeamsAndPlayers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWebRoleService/SearchTeams", ReplyAction="http://tempuri.org/IWebRoleService/SearchTeamsResponse")]
        System.IAsyncResult BeginSearchTeams(string text, System.AsyncCallback callback, object asyncState);
        
        string EndSearchTeams(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWebRoleService/SearchPlayers", ReplyAction="http://tempuri.org/IWebRoleService/SearchPlayersResponse")]
        System.IAsyncResult BeginSearchPlayers(string text, System.AsyncCallback callback, object asyncState);
        
        string EndSearchPlayers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWebRoleService/SellPlayerDirectly", ReplyAction="http://tempuri.org/IWebRoleService/SellPlayerDirectlyResponse")]
        System.IAsyncResult BeginSellPlayerDirectly(Jalkapallo_Shared.Player player, int price, System.AsyncCallback callback, object asyncState);
        
        void EndSellPlayerDirectly(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWebRoleService/SellPlayerAuctionHouse", ReplyAction="http://tempuri.org/IWebRoleService/SellPlayerAuctionHouseResponse")]
        System.IAsyncResult BeginSellPlayerAuctionHouse(Jalkapallo_Shared.Player player, int startingPrice, System.DateTime endOfAuctionHouse, System.AsyncCallback callback, object asyncState);
        
        void EndSellPlayerAuctionHouse(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWebRoleService/BuyPlayerDirectly", ReplyAction="http://tempuri.org/IWebRoleService/BuyPlayerDirectlyResponse")]
        System.IAsyncResult BeginBuyPlayerDirectly(Jalkapallo_Shared.Player player, int price, string teamName, System.AsyncCallback callback, object asyncState);
        
        void EndBuyPlayerDirectly(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWebRoleService/MakeAnOfferForAPlayer", ReplyAction="http://tempuri.org/IWebRoleService/MakeAnOfferForAPlayerResponse")]
        System.IAsyncResult BeginMakeAnOfferForAPlayer(Jalkapallo_Shared.Player player, int offer, string teamNameOfBuyer, System.AsyncCallback callback, object asyncState);
        
        bool EndMakeAnOfferForAPlayer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWebRoleService/SetTrainingType", ReplyAction="http://tempuri.org/IWebRoleService/SetTrainingTypeResponse")]
        System.IAsyncResult BeginSetTrainingType(string trainingType, string teamName, System.AsyncCallback callback, object asyncState);
        
        void EndSetTrainingType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWebRoleService/SetPushNotificationChannel", ReplyAction="http://tempuri.org/IWebRoleService/SetPushNotificationChannelResponse")]
        System.IAsyncResult BeginSetPushNotificationChannel(string phoneId, string uri, System.AsyncCallback callback, object asyncState);
        
        void EndSetPushNotificationChannel(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWebRoleServiceChannel : WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSavedTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSavedTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPlayersOnSellDirectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPlayersOnSellDirectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPlayersOnSellAuctionHouseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPlayersOnSellAuctionHouseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllTeamsAndPlayersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllTeamsAndPlayersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchTeamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchTeamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchPlayersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchPlayersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MakeAnOfferForAPlayerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MakeAnOfferForAPlayerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebRoleServiceClient : System.ServiceModel.ClientBase<WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService>, WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService {
        
        private BeginOperationDelegate onBeginRegistrationDelegate;
        
        private EndOperationDelegate onEndRegistrationDelegate;
        
        private System.Threading.SendOrPostCallback onRegistrationCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoginUserDelegate;
        
        private EndOperationDelegate onEndLoginUserDelegate;
        
        private System.Threading.SendOrPostCallback onLoginUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveCurrentTeamDelegate;
        
        private EndOperationDelegate onEndSaveCurrentTeamDelegate;
        
        private System.Threading.SendOrPostCallback onSaveCurrentTeamCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTeamDelegate;
        
        private EndOperationDelegate onEndGetTeamDelegate;
        
        private System.Threading.SendOrPostCallback onGetTeamCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSavedTeamDelegate;
        
        private EndOperationDelegate onEndGetSavedTeamDelegate;
        
        private System.Threading.SendOrPostCallback onGetSavedTeamCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPlayersOnSellDirectDelegate;
        
        private EndOperationDelegate onEndGetPlayersOnSellDirectDelegate;
        
        private System.Threading.SendOrPostCallback onGetPlayersOnSellDirectCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPlayersOnSellAuctionHouseDelegate;
        
        private EndOperationDelegate onEndGetPlayersOnSellAuctionHouseDelegate;
        
        private System.Threading.SendOrPostCallback onGetPlayersOnSellAuctionHouseCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllTeamsAndPlayersDelegate;
        
        private EndOperationDelegate onEndGetAllTeamsAndPlayersDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllTeamsAndPlayersCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchTeamsDelegate;
        
        private EndOperationDelegate onEndSearchTeamsDelegate;
        
        private System.Threading.SendOrPostCallback onSearchTeamsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchPlayersDelegate;
        
        private EndOperationDelegate onEndSearchPlayersDelegate;
        
        private System.Threading.SendOrPostCallback onSearchPlayersCompletedDelegate;
        
        private BeginOperationDelegate onBeginSellPlayerDirectlyDelegate;
        
        private EndOperationDelegate onEndSellPlayerDirectlyDelegate;
        
        private System.Threading.SendOrPostCallback onSellPlayerDirectlyCompletedDelegate;
        
        private BeginOperationDelegate onBeginSellPlayerAuctionHouseDelegate;
        
        private EndOperationDelegate onEndSellPlayerAuctionHouseDelegate;
        
        private System.Threading.SendOrPostCallback onSellPlayerAuctionHouseCompletedDelegate;
        
        private BeginOperationDelegate onBeginBuyPlayerDirectlyDelegate;
        
        private EndOperationDelegate onEndBuyPlayerDirectlyDelegate;
        
        private System.Threading.SendOrPostCallback onBuyPlayerDirectlyCompletedDelegate;
        
        private BeginOperationDelegate onBeginMakeAnOfferForAPlayerDelegate;
        
        private EndOperationDelegate onEndMakeAnOfferForAPlayerDelegate;
        
        private System.Threading.SendOrPostCallback onMakeAnOfferForAPlayerCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetTrainingTypeDelegate;
        
        private EndOperationDelegate onEndSetTrainingTypeDelegate;
        
        private System.Threading.SendOrPostCallback onSetTrainingTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetPushNotificationChannelDelegate;
        
        private EndOperationDelegate onEndSetPushNotificationChannelDelegate;
        
        private System.Threading.SendOrPostCallback onSetPushNotificationChannelCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public WebRoleServiceClient() {
        }
        
        public WebRoleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebRoleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebRoleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebRoleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<RegistrationCompletedEventArgs> RegistrationCompleted;
        
        public event System.EventHandler<LoginUserCompletedEventArgs> LoginUserCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveCurrentTeamCompleted;
        
        public event System.EventHandler<GetTeamCompletedEventArgs> GetTeamCompleted;
        
        public event System.EventHandler<GetSavedTeamCompletedEventArgs> GetSavedTeamCompleted;
        
        public event System.EventHandler<GetPlayersOnSellDirectCompletedEventArgs> GetPlayersOnSellDirectCompleted;
        
        public event System.EventHandler<GetPlayersOnSellAuctionHouseCompletedEventArgs> GetPlayersOnSellAuctionHouseCompleted;
        
        public event System.EventHandler<GetAllTeamsAndPlayersCompletedEventArgs> GetAllTeamsAndPlayersCompleted;
        
        public event System.EventHandler<SearchTeamsCompletedEventArgs> SearchTeamsCompleted;
        
        public event System.EventHandler<SearchPlayersCompletedEventArgs> SearchPlayersCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SellPlayerDirectlyCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SellPlayerAuctionHouseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> BuyPlayerDirectlyCompleted;
        
        public event System.EventHandler<MakeAnOfferForAPlayerCompletedEventArgs> MakeAnOfferForAPlayerCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetTrainingTypeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetPushNotificationChannelCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.BeginRegistration(string username, string password, string email, string teamName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegistration(username, password, email, teamName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.EndRegistration(System.IAsyncResult result) {
            return base.Channel.EndRegistration(result);
        }
        
        private System.IAsyncResult OnBeginRegistration(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string email = ((string)(inValues[2]));
            string teamName = ((string)(inValues[3]));
            return ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).BeginRegistration(username, password, email, teamName, callback, asyncState);
        }
        
        private object[] OnEndRegistration(System.IAsyncResult result) {
            int retVal = ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).EndRegistration(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRegistrationCompleted(object state) {
            if ((this.RegistrationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegistrationCompleted(this, new RegistrationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegistrationAsync(string username, string password, string email, string teamName) {
            this.RegistrationAsync(username, password, email, teamName, null);
        }
        
        public void RegistrationAsync(string username, string password, string email, string teamName, object userState) {
            if ((this.onBeginRegistrationDelegate == null)) {
                this.onBeginRegistrationDelegate = new BeginOperationDelegate(this.OnBeginRegistration);
            }
            if ((this.onEndRegistrationDelegate == null)) {
                this.onEndRegistrationDelegate = new EndOperationDelegate(this.OnEndRegistration);
            }
            if ((this.onRegistrationCompletedDelegate == null)) {
                this.onRegistrationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegistrationCompleted);
            }
            base.InvokeAsync(this.onBeginRegistrationDelegate, new object[] {
                        username,
                        password,
                        email,
                        teamName}, this.onEndRegistrationDelegate, this.onRegistrationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.BeginLoginUser(string userName, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoginUser(userName, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.EndLoginUser(System.IAsyncResult result) {
            return base.Channel.EndLoginUser(result);
        }
        
        private System.IAsyncResult OnBeginLoginUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).BeginLoginUser(userName, password, callback, asyncState);
        }
        
        private object[] OnEndLoginUser(System.IAsyncResult result) {
            string retVal = ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).EndLoginUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginUserCompleted(object state) {
            if ((this.LoginUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginUserCompleted(this, new LoginUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginUserAsync(string userName, string password) {
            this.LoginUserAsync(userName, password, null);
        }
        
        public void LoginUserAsync(string userName, string password, object userState) {
            if ((this.onBeginLoginUserDelegate == null)) {
                this.onBeginLoginUserDelegate = new BeginOperationDelegate(this.OnBeginLoginUser);
            }
            if ((this.onEndLoginUserDelegate == null)) {
                this.onEndLoginUserDelegate = new EndOperationDelegate(this.OnEndLoginUser);
            }
            if ((this.onLoginUserCompletedDelegate == null)) {
                this.onLoginUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginUserCompleted);
            }
            base.InvokeAsync(this.onBeginLoginUserDelegate, new object[] {
                        userName,
                        password}, this.onEndLoginUserDelegate, this.onLoginUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.BeginSaveCurrentTeam(System.Collections.ObjectModel.ObservableCollection<Jalkapallo_Shared.Player> currentFormation, string teamName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveCurrentTeam(currentFormation, teamName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.EndSaveCurrentTeam(System.IAsyncResult result) {
            base.Channel.EndSaveCurrentTeam(result);
        }
        
        private System.IAsyncResult OnBeginSaveCurrentTeam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Jalkapallo_Shared.Player> currentFormation = ((System.Collections.ObjectModel.ObservableCollection<Jalkapallo_Shared.Player>)(inValues[0]));
            string teamName = ((string)(inValues[1]));
            return ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).BeginSaveCurrentTeam(currentFormation, teamName, callback, asyncState);
        }
        
        private object[] OnEndSaveCurrentTeam(System.IAsyncResult result) {
            ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).EndSaveCurrentTeam(result);
            return null;
        }
        
        private void OnSaveCurrentTeamCompleted(object state) {
            if ((this.SaveCurrentTeamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveCurrentTeamCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveCurrentTeamAsync(System.Collections.ObjectModel.ObservableCollection<Jalkapallo_Shared.Player> currentFormation, string teamName) {
            this.SaveCurrentTeamAsync(currentFormation, teamName, null);
        }
        
        public void SaveCurrentTeamAsync(System.Collections.ObjectModel.ObservableCollection<Jalkapallo_Shared.Player> currentFormation, string teamName, object userState) {
            if ((this.onBeginSaveCurrentTeamDelegate == null)) {
                this.onBeginSaveCurrentTeamDelegate = new BeginOperationDelegate(this.OnBeginSaveCurrentTeam);
            }
            if ((this.onEndSaveCurrentTeamDelegate == null)) {
                this.onEndSaveCurrentTeamDelegate = new EndOperationDelegate(this.OnEndSaveCurrentTeam);
            }
            if ((this.onSaveCurrentTeamCompletedDelegate == null)) {
                this.onSaveCurrentTeamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveCurrentTeamCompleted);
            }
            base.InvokeAsync(this.onBeginSaveCurrentTeamDelegate, new object[] {
                        currentFormation,
                        teamName}, this.onEndSaveCurrentTeamDelegate, this.onSaveCurrentTeamCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.BeginGetTeam(string teamName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTeam(teamName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.EndGetTeam(System.IAsyncResult result) {
            return base.Channel.EndGetTeam(result);
        }
        
        private System.IAsyncResult OnBeginGetTeam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string teamName = ((string)(inValues[0]));
            return ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).BeginGetTeam(teamName, callback, asyncState);
        }
        
        private object[] OnEndGetTeam(System.IAsyncResult result) {
            string retVal = ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).EndGetTeam(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTeamCompleted(object state) {
            if ((this.GetTeamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTeamCompleted(this, new GetTeamCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTeamAsync(string teamName) {
            this.GetTeamAsync(teamName, null);
        }
        
        public void GetTeamAsync(string teamName, object userState) {
            if ((this.onBeginGetTeamDelegate == null)) {
                this.onBeginGetTeamDelegate = new BeginOperationDelegate(this.OnBeginGetTeam);
            }
            if ((this.onEndGetTeamDelegate == null)) {
                this.onEndGetTeamDelegate = new EndOperationDelegate(this.OnEndGetTeam);
            }
            if ((this.onGetTeamCompletedDelegate == null)) {
                this.onGetTeamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTeamCompleted);
            }
            base.InvokeAsync(this.onBeginGetTeamDelegate, new object[] {
                        teamName}, this.onEndGetTeamDelegate, this.onGetTeamCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.BeginGetSavedTeam(string teamName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSavedTeam(teamName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.EndGetSavedTeam(System.IAsyncResult result) {
            return base.Channel.EndGetSavedTeam(result);
        }
        
        private System.IAsyncResult OnBeginGetSavedTeam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string teamName = ((string)(inValues[0]));
            return ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).BeginGetSavedTeam(teamName, callback, asyncState);
        }
        
        private object[] OnEndGetSavedTeam(System.IAsyncResult result) {
            string retVal = ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).EndGetSavedTeam(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSavedTeamCompleted(object state) {
            if ((this.GetSavedTeamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSavedTeamCompleted(this, new GetSavedTeamCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSavedTeamAsync(string teamName) {
            this.GetSavedTeamAsync(teamName, null);
        }
        
        public void GetSavedTeamAsync(string teamName, object userState) {
            if ((this.onBeginGetSavedTeamDelegate == null)) {
                this.onBeginGetSavedTeamDelegate = new BeginOperationDelegate(this.OnBeginGetSavedTeam);
            }
            if ((this.onEndGetSavedTeamDelegate == null)) {
                this.onEndGetSavedTeamDelegate = new EndOperationDelegate(this.OnEndGetSavedTeam);
            }
            if ((this.onGetSavedTeamCompletedDelegate == null)) {
                this.onGetSavedTeamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSavedTeamCompleted);
            }
            base.InvokeAsync(this.onBeginGetSavedTeamDelegate, new object[] {
                        teamName}, this.onEndGetSavedTeamDelegate, this.onGetSavedTeamCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.BeginGetPlayersOnSellDirect(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPlayersOnSellDirect(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.EndGetPlayersOnSellDirect(System.IAsyncResult result) {
            return base.Channel.EndGetPlayersOnSellDirect(result);
        }
        
        private System.IAsyncResult OnBeginGetPlayersOnSellDirect(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).BeginGetPlayersOnSellDirect(callback, asyncState);
        }
        
        private object[] OnEndGetPlayersOnSellDirect(System.IAsyncResult result) {
            string retVal = ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).EndGetPlayersOnSellDirect(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPlayersOnSellDirectCompleted(object state) {
            if ((this.GetPlayersOnSellDirectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPlayersOnSellDirectCompleted(this, new GetPlayersOnSellDirectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPlayersOnSellDirectAsync() {
            this.GetPlayersOnSellDirectAsync(null);
        }
        
        public void GetPlayersOnSellDirectAsync(object userState) {
            if ((this.onBeginGetPlayersOnSellDirectDelegate == null)) {
                this.onBeginGetPlayersOnSellDirectDelegate = new BeginOperationDelegate(this.OnBeginGetPlayersOnSellDirect);
            }
            if ((this.onEndGetPlayersOnSellDirectDelegate == null)) {
                this.onEndGetPlayersOnSellDirectDelegate = new EndOperationDelegate(this.OnEndGetPlayersOnSellDirect);
            }
            if ((this.onGetPlayersOnSellDirectCompletedDelegate == null)) {
                this.onGetPlayersOnSellDirectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPlayersOnSellDirectCompleted);
            }
            base.InvokeAsync(this.onBeginGetPlayersOnSellDirectDelegate, null, this.onEndGetPlayersOnSellDirectDelegate, this.onGetPlayersOnSellDirectCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.BeginGetPlayersOnSellAuctionHouse(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPlayersOnSellAuctionHouse(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.EndGetPlayersOnSellAuctionHouse(System.IAsyncResult result) {
            return base.Channel.EndGetPlayersOnSellAuctionHouse(result);
        }
        
        private System.IAsyncResult OnBeginGetPlayersOnSellAuctionHouse(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).BeginGetPlayersOnSellAuctionHouse(callback, asyncState);
        }
        
        private object[] OnEndGetPlayersOnSellAuctionHouse(System.IAsyncResult result) {
            string retVal = ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).EndGetPlayersOnSellAuctionHouse(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPlayersOnSellAuctionHouseCompleted(object state) {
            if ((this.GetPlayersOnSellAuctionHouseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPlayersOnSellAuctionHouseCompleted(this, new GetPlayersOnSellAuctionHouseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPlayersOnSellAuctionHouseAsync() {
            this.GetPlayersOnSellAuctionHouseAsync(null);
        }
        
        public void GetPlayersOnSellAuctionHouseAsync(object userState) {
            if ((this.onBeginGetPlayersOnSellAuctionHouseDelegate == null)) {
                this.onBeginGetPlayersOnSellAuctionHouseDelegate = new BeginOperationDelegate(this.OnBeginGetPlayersOnSellAuctionHouse);
            }
            if ((this.onEndGetPlayersOnSellAuctionHouseDelegate == null)) {
                this.onEndGetPlayersOnSellAuctionHouseDelegate = new EndOperationDelegate(this.OnEndGetPlayersOnSellAuctionHouse);
            }
            if ((this.onGetPlayersOnSellAuctionHouseCompletedDelegate == null)) {
                this.onGetPlayersOnSellAuctionHouseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPlayersOnSellAuctionHouseCompleted);
            }
            base.InvokeAsync(this.onBeginGetPlayersOnSellAuctionHouseDelegate, null, this.onEndGetPlayersOnSellAuctionHouseDelegate, this.onGetPlayersOnSellAuctionHouseCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.BeginGetAllTeamsAndPlayers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllTeamsAndPlayers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.EndGetAllTeamsAndPlayers(System.IAsyncResult result) {
            return base.Channel.EndGetAllTeamsAndPlayers(result);
        }
        
        private System.IAsyncResult OnBeginGetAllTeamsAndPlayers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).BeginGetAllTeamsAndPlayers(callback, asyncState);
        }
        
        private object[] OnEndGetAllTeamsAndPlayers(System.IAsyncResult result) {
            string retVal = ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).EndGetAllTeamsAndPlayers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllTeamsAndPlayersCompleted(object state) {
            if ((this.GetAllTeamsAndPlayersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllTeamsAndPlayersCompleted(this, new GetAllTeamsAndPlayersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllTeamsAndPlayersAsync() {
            this.GetAllTeamsAndPlayersAsync(null);
        }
        
        public void GetAllTeamsAndPlayersAsync(object userState) {
            if ((this.onBeginGetAllTeamsAndPlayersDelegate == null)) {
                this.onBeginGetAllTeamsAndPlayersDelegate = new BeginOperationDelegate(this.OnBeginGetAllTeamsAndPlayers);
            }
            if ((this.onEndGetAllTeamsAndPlayersDelegate == null)) {
                this.onEndGetAllTeamsAndPlayersDelegate = new EndOperationDelegate(this.OnEndGetAllTeamsAndPlayers);
            }
            if ((this.onGetAllTeamsAndPlayersCompletedDelegate == null)) {
                this.onGetAllTeamsAndPlayersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllTeamsAndPlayersCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllTeamsAndPlayersDelegate, null, this.onEndGetAllTeamsAndPlayersDelegate, this.onGetAllTeamsAndPlayersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.BeginSearchTeams(string text, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchTeams(text, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.EndSearchTeams(System.IAsyncResult result) {
            return base.Channel.EndSearchTeams(result);
        }
        
        private System.IAsyncResult OnBeginSearchTeams(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string text = ((string)(inValues[0]));
            return ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).BeginSearchTeams(text, callback, asyncState);
        }
        
        private object[] OnEndSearchTeams(System.IAsyncResult result) {
            string retVal = ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).EndSearchTeams(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchTeamsCompleted(object state) {
            if ((this.SearchTeamsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchTeamsCompleted(this, new SearchTeamsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchTeamsAsync(string text) {
            this.SearchTeamsAsync(text, null);
        }
        
        public void SearchTeamsAsync(string text, object userState) {
            if ((this.onBeginSearchTeamsDelegate == null)) {
                this.onBeginSearchTeamsDelegate = new BeginOperationDelegate(this.OnBeginSearchTeams);
            }
            if ((this.onEndSearchTeamsDelegate == null)) {
                this.onEndSearchTeamsDelegate = new EndOperationDelegate(this.OnEndSearchTeams);
            }
            if ((this.onSearchTeamsCompletedDelegate == null)) {
                this.onSearchTeamsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchTeamsCompleted);
            }
            base.InvokeAsync(this.onBeginSearchTeamsDelegate, new object[] {
                        text}, this.onEndSearchTeamsDelegate, this.onSearchTeamsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.BeginSearchPlayers(string text, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchPlayers(text, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.EndSearchPlayers(System.IAsyncResult result) {
            return base.Channel.EndSearchPlayers(result);
        }
        
        private System.IAsyncResult OnBeginSearchPlayers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string text = ((string)(inValues[0]));
            return ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).BeginSearchPlayers(text, callback, asyncState);
        }
        
        private object[] OnEndSearchPlayers(System.IAsyncResult result) {
            string retVal = ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).EndSearchPlayers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchPlayersCompleted(object state) {
            if ((this.SearchPlayersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchPlayersCompleted(this, new SearchPlayersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchPlayersAsync(string text) {
            this.SearchPlayersAsync(text, null);
        }
        
        public void SearchPlayersAsync(string text, object userState) {
            if ((this.onBeginSearchPlayersDelegate == null)) {
                this.onBeginSearchPlayersDelegate = new BeginOperationDelegate(this.OnBeginSearchPlayers);
            }
            if ((this.onEndSearchPlayersDelegate == null)) {
                this.onEndSearchPlayersDelegate = new EndOperationDelegate(this.OnEndSearchPlayers);
            }
            if ((this.onSearchPlayersCompletedDelegate == null)) {
                this.onSearchPlayersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchPlayersCompleted);
            }
            base.InvokeAsync(this.onBeginSearchPlayersDelegate, new object[] {
                        text}, this.onEndSearchPlayersDelegate, this.onSearchPlayersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.BeginSellPlayerDirectly(Jalkapallo_Shared.Player player, int price, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSellPlayerDirectly(player, price, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.EndSellPlayerDirectly(System.IAsyncResult result) {
            base.Channel.EndSellPlayerDirectly(result);
        }
        
        private System.IAsyncResult OnBeginSellPlayerDirectly(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Jalkapallo_Shared.Player player = ((Jalkapallo_Shared.Player)(inValues[0]));
            int price = ((int)(inValues[1]));
            return ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).BeginSellPlayerDirectly(player, price, callback, asyncState);
        }
        
        private object[] OnEndSellPlayerDirectly(System.IAsyncResult result) {
            ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).EndSellPlayerDirectly(result);
            return null;
        }
        
        private void OnSellPlayerDirectlyCompleted(object state) {
            if ((this.SellPlayerDirectlyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SellPlayerDirectlyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SellPlayerDirectlyAsync(Jalkapallo_Shared.Player player, int price) {
            this.SellPlayerDirectlyAsync(player, price, null);
        }
        
        public void SellPlayerDirectlyAsync(Jalkapallo_Shared.Player player, int price, object userState) {
            if ((this.onBeginSellPlayerDirectlyDelegate == null)) {
                this.onBeginSellPlayerDirectlyDelegate = new BeginOperationDelegate(this.OnBeginSellPlayerDirectly);
            }
            if ((this.onEndSellPlayerDirectlyDelegate == null)) {
                this.onEndSellPlayerDirectlyDelegate = new EndOperationDelegate(this.OnEndSellPlayerDirectly);
            }
            if ((this.onSellPlayerDirectlyCompletedDelegate == null)) {
                this.onSellPlayerDirectlyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSellPlayerDirectlyCompleted);
            }
            base.InvokeAsync(this.onBeginSellPlayerDirectlyDelegate, new object[] {
                        player,
                        price}, this.onEndSellPlayerDirectlyDelegate, this.onSellPlayerDirectlyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.BeginSellPlayerAuctionHouse(Jalkapallo_Shared.Player player, int startingPrice, System.DateTime endOfAuctionHouse, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSellPlayerAuctionHouse(player, startingPrice, endOfAuctionHouse, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.EndSellPlayerAuctionHouse(System.IAsyncResult result) {
            base.Channel.EndSellPlayerAuctionHouse(result);
        }
        
        private System.IAsyncResult OnBeginSellPlayerAuctionHouse(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Jalkapallo_Shared.Player player = ((Jalkapallo_Shared.Player)(inValues[0]));
            int startingPrice = ((int)(inValues[1]));
            System.DateTime endOfAuctionHouse = ((System.DateTime)(inValues[2]));
            return ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).BeginSellPlayerAuctionHouse(player, startingPrice, endOfAuctionHouse, callback, asyncState);
        }
        
        private object[] OnEndSellPlayerAuctionHouse(System.IAsyncResult result) {
            ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).EndSellPlayerAuctionHouse(result);
            return null;
        }
        
        private void OnSellPlayerAuctionHouseCompleted(object state) {
            if ((this.SellPlayerAuctionHouseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SellPlayerAuctionHouseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SellPlayerAuctionHouseAsync(Jalkapallo_Shared.Player player, int startingPrice, System.DateTime endOfAuctionHouse) {
            this.SellPlayerAuctionHouseAsync(player, startingPrice, endOfAuctionHouse, null);
        }
        
        public void SellPlayerAuctionHouseAsync(Jalkapallo_Shared.Player player, int startingPrice, System.DateTime endOfAuctionHouse, object userState) {
            if ((this.onBeginSellPlayerAuctionHouseDelegate == null)) {
                this.onBeginSellPlayerAuctionHouseDelegate = new BeginOperationDelegate(this.OnBeginSellPlayerAuctionHouse);
            }
            if ((this.onEndSellPlayerAuctionHouseDelegate == null)) {
                this.onEndSellPlayerAuctionHouseDelegate = new EndOperationDelegate(this.OnEndSellPlayerAuctionHouse);
            }
            if ((this.onSellPlayerAuctionHouseCompletedDelegate == null)) {
                this.onSellPlayerAuctionHouseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSellPlayerAuctionHouseCompleted);
            }
            base.InvokeAsync(this.onBeginSellPlayerAuctionHouseDelegate, new object[] {
                        player,
                        startingPrice,
                        endOfAuctionHouse}, this.onEndSellPlayerAuctionHouseDelegate, this.onSellPlayerAuctionHouseCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.BeginBuyPlayerDirectly(Jalkapallo_Shared.Player player, int price, string teamName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBuyPlayerDirectly(player, price, teamName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.EndBuyPlayerDirectly(System.IAsyncResult result) {
            base.Channel.EndBuyPlayerDirectly(result);
        }
        
        private System.IAsyncResult OnBeginBuyPlayerDirectly(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Jalkapallo_Shared.Player player = ((Jalkapallo_Shared.Player)(inValues[0]));
            int price = ((int)(inValues[1]));
            string teamName = ((string)(inValues[2]));
            return ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).BeginBuyPlayerDirectly(player, price, teamName, callback, asyncState);
        }
        
        private object[] OnEndBuyPlayerDirectly(System.IAsyncResult result) {
            ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).EndBuyPlayerDirectly(result);
            return null;
        }
        
        private void OnBuyPlayerDirectlyCompleted(object state) {
            if ((this.BuyPlayerDirectlyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BuyPlayerDirectlyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BuyPlayerDirectlyAsync(Jalkapallo_Shared.Player player, int price, string teamName) {
            this.BuyPlayerDirectlyAsync(player, price, teamName, null);
        }
        
        public void BuyPlayerDirectlyAsync(Jalkapallo_Shared.Player player, int price, string teamName, object userState) {
            if ((this.onBeginBuyPlayerDirectlyDelegate == null)) {
                this.onBeginBuyPlayerDirectlyDelegate = new BeginOperationDelegate(this.OnBeginBuyPlayerDirectly);
            }
            if ((this.onEndBuyPlayerDirectlyDelegate == null)) {
                this.onEndBuyPlayerDirectlyDelegate = new EndOperationDelegate(this.OnEndBuyPlayerDirectly);
            }
            if ((this.onBuyPlayerDirectlyCompletedDelegate == null)) {
                this.onBuyPlayerDirectlyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBuyPlayerDirectlyCompleted);
            }
            base.InvokeAsync(this.onBeginBuyPlayerDirectlyDelegate, new object[] {
                        player,
                        price,
                        teamName}, this.onEndBuyPlayerDirectlyDelegate, this.onBuyPlayerDirectlyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.BeginMakeAnOfferForAPlayer(Jalkapallo_Shared.Player player, int offer, string teamNameOfBuyer, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMakeAnOfferForAPlayer(player, offer, teamNameOfBuyer, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.EndMakeAnOfferForAPlayer(System.IAsyncResult result) {
            return base.Channel.EndMakeAnOfferForAPlayer(result);
        }
        
        private System.IAsyncResult OnBeginMakeAnOfferForAPlayer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Jalkapallo_Shared.Player player = ((Jalkapallo_Shared.Player)(inValues[0]));
            int offer = ((int)(inValues[1]));
            string teamNameOfBuyer = ((string)(inValues[2]));
            return ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).BeginMakeAnOfferForAPlayer(player, offer, teamNameOfBuyer, callback, asyncState);
        }
        
        private object[] OnEndMakeAnOfferForAPlayer(System.IAsyncResult result) {
            bool retVal = ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).EndMakeAnOfferForAPlayer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMakeAnOfferForAPlayerCompleted(object state) {
            if ((this.MakeAnOfferForAPlayerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MakeAnOfferForAPlayerCompleted(this, new MakeAnOfferForAPlayerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MakeAnOfferForAPlayerAsync(Jalkapallo_Shared.Player player, int offer, string teamNameOfBuyer) {
            this.MakeAnOfferForAPlayerAsync(player, offer, teamNameOfBuyer, null);
        }
        
        public void MakeAnOfferForAPlayerAsync(Jalkapallo_Shared.Player player, int offer, string teamNameOfBuyer, object userState) {
            if ((this.onBeginMakeAnOfferForAPlayerDelegate == null)) {
                this.onBeginMakeAnOfferForAPlayerDelegate = new BeginOperationDelegate(this.OnBeginMakeAnOfferForAPlayer);
            }
            if ((this.onEndMakeAnOfferForAPlayerDelegate == null)) {
                this.onEndMakeAnOfferForAPlayerDelegate = new EndOperationDelegate(this.OnEndMakeAnOfferForAPlayer);
            }
            if ((this.onMakeAnOfferForAPlayerCompletedDelegate == null)) {
                this.onMakeAnOfferForAPlayerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMakeAnOfferForAPlayerCompleted);
            }
            base.InvokeAsync(this.onBeginMakeAnOfferForAPlayerDelegate, new object[] {
                        player,
                        offer,
                        teamNameOfBuyer}, this.onEndMakeAnOfferForAPlayerDelegate, this.onMakeAnOfferForAPlayerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.BeginSetTrainingType(string trainingType, string teamName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetTrainingType(trainingType, teamName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.EndSetTrainingType(System.IAsyncResult result) {
            base.Channel.EndSetTrainingType(result);
        }
        
        private System.IAsyncResult OnBeginSetTrainingType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string trainingType = ((string)(inValues[0]));
            string teamName = ((string)(inValues[1]));
            return ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).BeginSetTrainingType(trainingType, teamName, callback, asyncState);
        }
        
        private object[] OnEndSetTrainingType(System.IAsyncResult result) {
            ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).EndSetTrainingType(result);
            return null;
        }
        
        private void OnSetTrainingTypeCompleted(object state) {
            if ((this.SetTrainingTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetTrainingTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetTrainingTypeAsync(string trainingType, string teamName) {
            this.SetTrainingTypeAsync(trainingType, teamName, null);
        }
        
        public void SetTrainingTypeAsync(string trainingType, string teamName, object userState) {
            if ((this.onBeginSetTrainingTypeDelegate == null)) {
                this.onBeginSetTrainingTypeDelegate = new BeginOperationDelegate(this.OnBeginSetTrainingType);
            }
            if ((this.onEndSetTrainingTypeDelegate == null)) {
                this.onEndSetTrainingTypeDelegate = new EndOperationDelegate(this.OnEndSetTrainingType);
            }
            if ((this.onSetTrainingTypeCompletedDelegate == null)) {
                this.onSetTrainingTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetTrainingTypeCompleted);
            }
            base.InvokeAsync(this.onBeginSetTrainingTypeDelegate, new object[] {
                        trainingType,
                        teamName}, this.onEndSetTrainingTypeDelegate, this.onSetTrainingTypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.BeginSetPushNotificationChannel(string phoneId, string uri, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetPushNotificationChannel(phoneId, uri, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService.EndSetPushNotificationChannel(System.IAsyncResult result) {
            base.Channel.EndSetPushNotificationChannel(result);
        }
        
        private System.IAsyncResult OnBeginSetPushNotificationChannel(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string phoneId = ((string)(inValues[0]));
            string uri = ((string)(inValues[1]));
            return ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).BeginSetPushNotificationChannel(phoneId, uri, callback, asyncState);
        }
        
        private object[] OnEndSetPushNotificationChannel(System.IAsyncResult result) {
            ((WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService)(this)).EndSetPushNotificationChannel(result);
            return null;
        }
        
        private void OnSetPushNotificationChannelCompleted(object state) {
            if ((this.SetPushNotificationChannelCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetPushNotificationChannelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetPushNotificationChannelAsync(string phoneId, string uri) {
            this.SetPushNotificationChannelAsync(phoneId, uri, null);
        }
        
        public void SetPushNotificationChannelAsync(string phoneId, string uri, object userState) {
            if ((this.onBeginSetPushNotificationChannelDelegate == null)) {
                this.onBeginSetPushNotificationChannelDelegate = new BeginOperationDelegate(this.OnBeginSetPushNotificationChannel);
            }
            if ((this.onEndSetPushNotificationChannelDelegate == null)) {
                this.onEndSetPushNotificationChannelDelegate = new EndOperationDelegate(this.OnEndSetPushNotificationChannel);
            }
            if ((this.onSetPushNotificationChannelCompletedDelegate == null)) {
                this.onSetPushNotificationChannelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetPushNotificationChannelCompleted);
            }
            base.InvokeAsync(this.onBeginSetPushNotificationChannelDelegate, new object[] {
                        phoneId,
                        uri}, this.onEndSetPushNotificationChannelDelegate, this.onSetPushNotificationChannelCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService CreateChannel() {
            return new WebRoleServiceClientChannel(this);
        }
        
        private class WebRoleServiceClientChannel : ChannelBase<WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService>, WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService {
            
            public WebRoleServiceClientChannel(System.ServiceModel.ClientBase<WebRoleWCFConnector.WebRoleServiceReference.IWebRoleService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginRegistration(string username, string password, string email, string teamName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = username;
                _args[1] = password;
                _args[2] = email;
                _args[3] = teamName;
                System.IAsyncResult _result = base.BeginInvoke("Registration", _args, callback, asyncState);
                return _result;
            }
            
            public int EndRegistration(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("Registration", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLoginUser(string userName, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userName;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("LoginUser", _args, callback, asyncState);
                return _result;
            }
            
            public string EndLoginUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("LoginUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveCurrentTeam(System.Collections.ObjectModel.ObservableCollection<Jalkapallo_Shared.Player> currentFormation, string teamName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = currentFormation;
                _args[1] = teamName;
                System.IAsyncResult _result = base.BeginInvoke("SaveCurrentTeam", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveCurrentTeam(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveCurrentTeam", _args, result);
            }
            
            public System.IAsyncResult BeginGetTeam(string teamName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = teamName;
                System.IAsyncResult _result = base.BeginInvoke("GetTeam", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetTeam(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetTeam", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSavedTeam(string teamName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = teamName;
                System.IAsyncResult _result = base.BeginInvoke("GetSavedTeam", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetSavedTeam(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetSavedTeam", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPlayersOnSellDirect(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetPlayersOnSellDirect", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetPlayersOnSellDirect(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetPlayersOnSellDirect", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPlayersOnSellAuctionHouse(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetPlayersOnSellAuctionHouse", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetPlayersOnSellAuctionHouse(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetPlayersOnSellAuctionHouse", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllTeamsAndPlayers(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllTeamsAndPlayers", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetAllTeamsAndPlayers(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetAllTeamsAndPlayers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchTeams(string text, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = text;
                System.IAsyncResult _result = base.BeginInvoke("SearchTeams", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSearchTeams(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("SearchTeams", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchPlayers(string text, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = text;
                System.IAsyncResult _result = base.BeginInvoke("SearchPlayers", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSearchPlayers(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("SearchPlayers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSellPlayerDirectly(Jalkapallo_Shared.Player player, int price, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = player;
                _args[1] = price;
                System.IAsyncResult _result = base.BeginInvoke("SellPlayerDirectly", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSellPlayerDirectly(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SellPlayerDirectly", _args, result);
            }
            
            public System.IAsyncResult BeginSellPlayerAuctionHouse(Jalkapallo_Shared.Player player, int startingPrice, System.DateTime endOfAuctionHouse, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = player;
                _args[1] = startingPrice;
                _args[2] = endOfAuctionHouse;
                System.IAsyncResult _result = base.BeginInvoke("SellPlayerAuctionHouse", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSellPlayerAuctionHouse(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SellPlayerAuctionHouse", _args, result);
            }
            
            public System.IAsyncResult BeginBuyPlayerDirectly(Jalkapallo_Shared.Player player, int price, string teamName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = player;
                _args[1] = price;
                _args[2] = teamName;
                System.IAsyncResult _result = base.BeginInvoke("BuyPlayerDirectly", _args, callback, asyncState);
                return _result;
            }
            
            public void EndBuyPlayerDirectly(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("BuyPlayerDirectly", _args, result);
            }
            
            public System.IAsyncResult BeginMakeAnOfferForAPlayer(Jalkapallo_Shared.Player player, int offer, string teamNameOfBuyer, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = player;
                _args[1] = offer;
                _args[2] = teamNameOfBuyer;
                System.IAsyncResult _result = base.BeginInvoke("MakeAnOfferForAPlayer", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndMakeAnOfferForAPlayer(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("MakeAnOfferForAPlayer", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetTrainingType(string trainingType, string teamName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = trainingType;
                _args[1] = teamName;
                System.IAsyncResult _result = base.BeginInvoke("SetTrainingType", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSetTrainingType(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SetTrainingType", _args, result);
            }
            
            public System.IAsyncResult BeginSetPushNotificationChannel(string phoneId, string uri, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = phoneId;
                _args[1] = uri;
                System.IAsyncResult _result = base.BeginInvoke("SetPushNotificationChannel", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSetPushNotificationChannel(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SetPushNotificationChannel", _args, result);
            }
        }
    }
}
